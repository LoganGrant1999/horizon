name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  type-check-and-build:
    name: Type Check & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate
        working-directory: ./apps/api

      - name: Type check API
        run: npm run type-check
        working-directory: ./apps/api

      - name: Type check Web
        run: npm run type-check
        working-directory: ./apps/web

      - name: Build API
        run: npm run build
        working-directory: ./apps/api

      - name: Build Web
        run: npm run build
        working-directory: ./apps/web

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: health_heatmap_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate
        working-directory: ./apps/api

      - name: Run database migrations
        run: npx prisma migrate deploy
        working-directory: ./apps/api
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/health_heatmap_test

      - name: Run API tests
        run: npm test
        working-directory: ./apps/api
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/health_heatmap_test
          JWT_SECRET: test-secret-key-for-ci
          SESSION_SECRET: test-session-secret-for-ci

      - name: Run Web tests
        run: npm test
        working-directory: ./apps/web

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint API
        run: npm run lint
        working-directory: ./apps/api

      - name: Lint Web
        run: npm run lint
        working-directory: ./apps/web
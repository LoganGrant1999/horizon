version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: health-heatmap-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: health_heatmap
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: health-heatmap-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: health-heatmap-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: postgresql://postgres:postgres@db:5432/health_heatmap
      SESSION_SECRET: ${SESSION_SECRET:-change-me-in-production-please}
      WEB_URL: http://localhost:5173
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: health-heatmap
      S3_REGION: us-east-1
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
    ports:
      - '4000:4000'
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && node dist/index.js"

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: health-heatmap-web
    restart: unless-stopped
    ports:
      - '5173:80'
    depends_on:
      - api

volumes:
  postgres_data:
  minio_data:
version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    environment:
      - VITE_API_BASE=/api
    depends_on:
      - api
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - horizon

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    env_file:
      - apps/api/.env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/horizon
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET_NAME=horizon-health
      - S3_ACCESS_KEY=${MINIO_ROOT_USER}
      - S3_SECRET_KEY=${MINIO_ROOT_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 40s
    ports:
      - "4000:4000"
    restart: unless-stopped
    networks:
      - horizon

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=horizon
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - horizon

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      - horizon

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  horizon:
    driver: bridge